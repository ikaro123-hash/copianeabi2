# Generated by Django 5.2.5 on 2025-09-16 13:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=200, verbose_name='Assunto')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Enviado em')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lida')),
            ],
            options={
                'verbose_name': 'Mensagem de Contato',
                'verbose_name_plural': 'Mensagens de Contato',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nome')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrador'), ('reader', 'Leitor')], default='reader', max_length=10, verbose_name='Função')),
                ('first_name', models.CharField(max_length=150, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=150, verbose_name='Sobrenome')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('date', models.DateField(verbose_name='Data')),
                ('start_time', models.TimeField(verbose_name='Hora de início')),
                ('end_time', models.TimeField(verbose_name='Hora de término')),
                ('location', models.CharField(max_length=200, verbose_name='Local')),
                ('category', models.CharField(max_length=100, verbose_name='Categoria')),
                ('event_type', models.CharField(choices=[('presencial', 'Presencial'), ('online', 'Online'), ('hibrido', 'Híbrido')], default='presencial', max_length=20, verbose_name='Tipo de evento')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacidade')),
                ('registered', models.PositiveIntegerField(default=0, verbose_name='Inscritos')),
                ('organizer', models.CharField(max_length=200, verbose_name='Organizador')),
                ('speakers', models.TextField(blank=True, help_text='Lista de palestrantes separados por vírgula', verbose_name='Palestrantes')),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/', verbose_name='Imagem')),
                ('status', models.CharField(choices=[('upcoming', 'Próximo'), ('ongoing', 'Em andamento'), ('completed', 'Finalizado'), ('cancelled', 'Cancelado')], default='upcoming', max_length=20, verbose_name='Status')),
                ('featured', models.BooleanField(default=False, verbose_name='Destaque')),
                ('registration_required', models.BooleanField(default=True, verbose_name='Inscrição obrigatória')),
                ('price', models.CharField(default='Gratuito', max_length=50, verbose_name='Preço')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('tags', models.ManyToManyField(blank=True, to='core.tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('excerpt', models.TextField(max_length=300, verbose_name='Resumo')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de publicação')),
                ('read_time', models.CharField(default='5 min', max_length=20, verbose_name='Tempo de leitura')),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog_images/', verbose_name='Imagem')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Visualizações')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='Curtidas')),
                ('featured', models.BooleanField(default=False, verbose_name='Destaque')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('published', 'Publicado'), ('archived', 'Arquivado')], default='published', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.category', verbose_name='Categoria')),
                ('tags', models.ManyToManyField(blank=True, to='core.tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Post do Blog',
                'verbose_name_plural': 'Posts do Blog',
                'ordering': ['-published_date'],
            },
        ),
    ]
